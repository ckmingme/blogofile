---
title: 谦虚的程序员
date: 2011/12/28 14:54:00
categories: Tech, Life
draft: True
---
经过诸多机缘巧合，我在一九五二年开春正式进入编程这一职业。就我所知，我是第一个做这件事的荷兰人。回顾过去，最不可思议的事情——至少在我所处的地方，是程序员这个职业诞生的缓慢，缓慢的难以置信。但我仍然对这难以想象的缓慢进程中的两段鲜活记忆心怀感激。

在大约写了三年的程序之后，我与后来是我在阿姆斯特丹的数学研究中心的老板A.van Wijngaarden 有过一次让我余生都充满感激的交谈。当时问题的关键是我在编程的同时，应该去莱顿大学学习理论物理，而我却越来越发现很难把两件事情整在一起，我必须打定主意，要么停止编程，成为一个真正的、令人尊敬的物理学家，要么花最少的精力把学习物理这事正式结束，然后成为一个……什么呢？程序员？但这是一个令人尊敬的职业吗？毕竟，这只是编写程序？支持它成为一个理性上让人尊敬的学科的知识点在哪里？我清楚的记得我是多么的羡慕我做硬件的同事，当你问起他们的专业能力，至少他们可以说知道电子管、电子放大器等东西的方方面面，而我觉得如果我碰到这个问题，我的大脑将一片空白。我忧心忡忡的敲了 van Wijingaarden 的办公室门，问我是否能“跟他聊一会儿”，离开他办公室的几个小时之后，我变成了另外一个人。他耐心的听我把问题说清之后，他同意说至少在当时还没有编程这门学科，但他接下来平静的解释道，自动计算机越来越为人所接受，我们做的工作只是一个开始，并且为什么我不能成为使编程在未来几年成为一门学科的人之一呢？这成为了我人生中的一个转折点，于是我尽可能快的正式结束了我的物理学业。显然上面这个故事说明：我们在给年轻人建议时必须非常谨慎，有时他们真的会那样做下去！

又过了两年，也就是一九五七年，我结婚了，在荷兰的结婚程序中，你要说出你的职业，我说我是个程序员。但阿姆斯特丹的市政府不接受这个说法，理由是没有这个职业。然后，不管你信不信，我的结婚证上的“职业”这一栏可笑的写着“理论物理学家”几个字！

关于在我的国家程序员这个职业的出现有多缓慢这件事就先说到这。从那之后我对这个世界有了更多的了解，但普遍的印象是在别的国家，去除可能的日期因素，这个职业的发展情况也都差不多。

让我试着再抓一点过去时光的细节，希望能够更好的理解现在的情况。当我们继续做分析的时候，我们应该看到，对编程工作本质的许多普遍性误解都已成为遥远的过去了。

一开始的自动电子计算机都是独特的、各不相同的机器，他们都只能在令人兴奋的实验室里看到。自动计算机的愿景，对于当时可用的电子技术来说是个巨大的挑战。但有件事是肯定的：我们不能阻止那些有勇气的组织决定去造这样一个梦幻般的设备。梦幻般的设备是什么？回过头看，我们只能期望它能工作，最起码能工作一小会儿。最根本的问题是如何让这台机器保持正常运转。从物理层面说，自动计算机当务之急的问题反应在了一些在这个领域有年头的科学学会的名字上，例如美国计算机协会（Association for Computing Machinery 直译为计算器械协会）、英国计算机协会（British Computer Society），它们都明确的以物理设备为名。

那可怜的程序员呢？说老实话：他们几乎都不被外人所注意到。首先，早期的机器都非常笨重，也很难移动，而且需要大量的维护工作，自然而然，机器在哪个实验室里被开发出来，就在哪个实验室里使用。其次，程序员的那些背后的工作毫无魅力可言：向访客展示实实在在的机器可比展示几页代码壮观多了。但最重要的是，程序员对自己的工作有很谦虚的看法：他们的工作的所有意义都来源于存在着这样一台美妙的机器。因为这是一台独一无二的机器，程序员非常清楚他的程序只局限于本地运行，而且很显然这台机器的生命周期非常短暂，程序员知道在他的工作中，只有非常小的一部分能够产生持久的价值。最后，还有一个情况深刻的影响了程序员对自己工作的观点：一方面，尴尬的是机器的可靠性不高，而且通常运行的非常慢，内存也很小；另一方面，一些异常的指令会产生意外的解释。在那个时代，很多聪明的程序员发明了各种奇技淫巧把不可能的事硬生生的塞入了有各种限制的设备中，并从中获得了巨大的知识满足感。

关于编程，当时有两个观点，我现在先把他们提出来，之后我还会再讨论。一个观点是，一个真正称职的程序员应该脑子灵活并且很喜欢各种聪明的花招；另一个观点是，编程就是最大限度的逐条逐条压缩计算指令。

之所以有后面那个观点，是因为常见的情况是，确实，可用的设备是个夹脚鞋，那时人们偶尔天真的期望，一旦更强大的机器成为现实，编程将不再是个问题，因为那时再也不必努力榨干机器的极限了——这不正是之前编程所有做的所有工作吗？但接下来的几十年，发生了完全不同的事情：更强大的机器成为现实，而且强大了不只一个数量级。但我们发现自己非但没有处在一个所有编程都被解决的极乐世界中，反而被各种软件问题紧紧的扼住了咽喉！为什么！

有一个次要的原因：现代计算机在一定程度上比老计算机更难掌控。首先，我们有I/O中断，在不可预知且不可重现的时刻发生。跟老式的假装是完整的确定性自动机的串行机器比起来，现代计算机已经有巨大的变化，无数程序员的白头发证明一点，我们不应该轻易乱谈由那些特性产生的逻辑问题。其次，我们已经拥有装备多级存储设备的机器，像我们展示了管理策略上的问题，尽管有很多关于这方面的文献，但问题仍然存在并且难以捉摸。关于真实机器的架构变化所产生的并发复杂性就到此为止。

但我称之为次要原因；主要原因是……机器的能力已经有了数个数量级的增长！坦率的讲：只要没有机器，编程一点问题都没有；当我们有一些弱弱的机器的时候，编程变成了一个小问题，现在我们有了庞大的机器，编程也就同样成了一个巨大的问题。从这个角度讲，电子工业除了制造问题外什么问题都没有解决，制造了使用他们的产品的问题。换一个说法：如果现在机器的能力有一千倍的提升，社会的期望也将成比例的增长，可怜的程序员发现他的工作处在目的和手段的焦虑的爆炸性领域里。硬件能力的提高，加上可能在可靠性上也有戏剧性的提高，使得解决方案可行起来了，程序员几年前想都不敢想的可行。而几年之后的现在，程序员必须要想了，更糟糕的是，他还要把梦想变成现实！于是我们发现自己处在软件危机当中，这是个奇迹吗？你可能想：不，当然不是，这是可以提前预测到的，但是小先知们的问题是，仅仅过了五年你就发现他们之前是对的了。

然后，在六十年代中期，可怕的事情发生了：所谓的第三代计算机出现了。官方文字告诉我们说机器的性价比是设计时首要考虑的因素。但是，如果你把“性能”定义为机器的各种组件的忙闲度，那么不可避免的，你的设计中将使用一些不必要的内部管理程序，来完成绝大部分的的性能目标；如果你将价格定义为仅仅是硬件的价格，那么不可避免的，你将设计出非常难以编程的机器：例如机器指令码可能会执行程序员的指令，也可能执行系统指令，这中间存在着无法解决的冲突，早期机器上的各种约束规定显示了这一点。现在绝大部分这些讨厌的事情看起来已经变成现实。

当这些机器及其功能规格发布后，不少人变得很痛苦，起码我很痛苦。这些机器将无可争议的充斥计算机界，因此它们的设计更应该尽可能健壮。但是这些设计所体现出的如此严重的缺陷，让我感觉它们一下子把计算科学的发展延迟了至少十年：那是我整个职业生涯中最黑暗的一周。或许现在最让人伤心的是，即使沮丧的过去了这么多年，仍然有许多人坚信某种自然法则告诉我们机器就应该是那个样子的。看到这么多的机器被卖掉，他们对自己的怀疑保持缄默，甚至获得了错误的安全感：毕竟，这些设计不可能太糟。但仔细想想就会发现这种说法跟“因为这么多人吸烟，所以吸烟肯定是健康的“没什么两样。

在这一点上，我很遗憾计算领域的科学期刊还不习惯评审新发布的计算机，就像评审科学著作一样，而且重要程度也应该一样。在这里我要坦白一件事，六十年代早期我写了一个评审稿想提交给CACM，尽管事实上，为了听取建议，我只将文字发给了一小部分同事，他们都鼓励并督促我去发表，可我后来还是没敢这样做，担心这样会给我或者编辑部带来太多麻烦。这种由于自己的懦弱所产生的压抑使得我愈发的责备自己。虽然我相信我选择的理由确实有效，但我担心我的稿子被拒或者被以”个人品味问题“为由而遭丢弃。我现在仍然相信这些评审将会非常有用，我渴望它们的出现，因为如果被接受，这将是计算领域趋于成熟的一个明确信号。

我之所以这么关注硬件方面是因为我有一种感觉，任何计算工具的一个很重要的层面，就是它在影响着尝试使用它的人的思考习惯，而且我有理由相信这些影响比普遍认为的要强很多。现在让我们把注意力转到软件上面来。

软件的多样化是如此巨大以至于我必须把自己限制在有限的垫脚石上。我痛苦的意识到自己选择的太随意，我恳求你不要下任何**的结论，尊重我的感激 将不会提到的努力。

一开始是在英国剑桥的EDSAC（电子延时储存自动计算器），

