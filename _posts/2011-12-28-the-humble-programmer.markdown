---
title: 谦虚的程序员
date: 2011/12/28 14:54:00
categories: Tech, Life
draft: True
---
经过诸多机缘巧合，我在一九五二年开春正式进入编程这一职业。就我所知，我是第一个做这件事的荷兰人。回顾过去，最不可思议的事情——至少在我所处的地方，是程序员这个职业出现的缓慢，缓慢的难以置信。但我仍然对这难以想象的缓慢进程中的两段鲜活记忆心怀感激。

在大约写了三年的程序之后，我与后来是我在阿姆斯特丹的数学研究中心的老板A.van Wijngaarden 有过一次让我余生都对其充满感激的交谈。当时问题的关键是我应该同时去莱顿大学学习理论物理，而我却越来越发现很难把两件事情整在一起，我必须打定主意，要么停止编程，成为一个真正的、令人尊敬的物理学家，要么花最少的精力把学习物理这事正式结束，然后成为一个....什么呢？程序员？但这是一个令人尊敬的职业吗？毕竟，这只是编写程序？支持它成为一个理智上让人尊敬的学科的知识点在哪里？我清楚的记得我是多么的羡慕我的做硬件的同事，当你问起他们的专业能力，至少他们可以说知道电子管、电子放大器等东西的方方面面，而我觉得如果我遇到那样的问题，我的大脑将一片空白。我忧心忡忡的敲了 van Wijingaarden 的办公室门，问我是否能“跟他聊一会儿”，离开他办公室的几个小时之后，我变成了另外一个人。他耐心的听我把问题说清之后，他同意说至少在当时还没有编程这门学科，但他接下来平静的解释道自动计算机越来越为人所接受，我们做的工作只是一个开始，并且为什么我不能成为使编程在未来几年成为一门学科的人之一呢？这成为了我人生中的一个转折点，接着我尽可能快的正式完成了我的物理学习。显然上面这个故事的一个寓意是：我们在给年轻人建议时必须非常谨慎：有时他们真的会那样做下去！

又过了两年，也就是一九五七年，我结婚了，在荷兰的结婚程序中，你要说出你的职业，我说我是个程序员。但阿姆斯特丹的市政府不接受这个说法，理由是没有这个职业。然后，不管你相不相信，在我的结婚证上的“职业”这一栏可笑的写着“理论物理学家”几个字！

关于在我的国家程序员这个职业的出现有多缓慢这件事就这些了。从那之后我对这个世界有了更多的了解，但普遍的印象是在别的国家，去除可能的日期因素，这个职业的增长度也都差不多。

让我试着再抓一点昔日情形的细节，希望能够更好的理解现在的情况。当我们继续做分析的时候，我们应该看到对编程工作的本性的许多普遍误解都已成为遥远的过去了。

一开始的自动电子计算机都是独特的、各不相同的机器，他们都只能在令人兴奋的实验室里看到。自动计算机的愿景，对于当时可用的电子技术来说是个巨大的挑战。但有件事是肯定的：我们不能阻止那些有勇气的组织决定去造这样一个梦幻般的设备。梦幻般的设备是：回过头看，我们只能期望它能工作，最起码能工作一小会儿。最根本的问题是如何让这台机器保持正常运转。从物理层面说，自动计算机当务之急问题反应在了一些在这个领域有年头的科学学会的名字上，例如美国计算机协会（Association for Computing Machinery 直译为计算器械协会）、英国计算机协会（British Computer Society），它们明确的以物理设备为名。

那可怜的程序员呢？说老实话：几乎都不被外人所注意到。首先，早期的机器都非常笨重，也很难移动，而且需要大量的维护工作。自然而然，机器在哪个实验室里被开发出来，就在哪个实验室里使用。其次，他的那些背后的工作毫无魅力可言：向访客展示实实在在的机器可比展示几页代码壮观多了。但最重要的是，程序员对自己的工作有很谦虚的看法：他的工作的所有意义都来源于这台美妙的机器的存在。因为这是一台独一无二的机器，程序员非常清楚他的程序只局限于本地运行，而且很显然这台机器的生命周期非常短暂，他知道在他的工作中，只有非常小的一部分能够产生持久的价值。最后，还有另一个情况对程序员对自己工作的观点有深刻的影响：一方面，尴尬的是他的机器可靠性不高，而且通常运行的非常慢，内存也很小，另一方面一些异常的指令会造成意外的解释。在那个时代，很多聪明的程序员发明了各种奇技淫巧把不可能的事硬生生的塞入了有各种限制的设备中，并从中获得了巨大的知识满足感。

关于编程，当时有两个观点，我现在先提到他们，之后我还会再讨论。一个观点是一个真正称职的程序员应该脑子灵活并且很喜欢各种聪明的花招；另一个观点是编程就是最大限度的逐条逐条压缩计算指令。

后者是这样一个常见的情况的结果。确实，有用的设备是个夹脚鞋，那时人们经常碰到天真的期望，一旦更强大的机器成为现实，编程将不再是个问题，因为那时再也不必努力榨干机器的极限了，这正是之前编程所有做的所有工作，不是吗？但接下来的几十年，发生了完全不同的事情：更强大的机器成为现实，强大了不只一个数量级。但我们发现自己非但没有处在一个所有编程都被解决的极乐世界中，反而发现我们自己被各种软件问题紧紧的扼住了咽喉！为什么！

有一个次要的原因：现代计算机在一定程度上比老计算机更难掌控。首先，我们有I/O中断，在不可预知且不可重现的时刻发生。

但我称之为次要原因；主要原因是。。。